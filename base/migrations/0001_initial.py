# Generated by Django 5.0.6 on 2024-07-28 09:54

import base.models
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Qualification Name')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Academic Qualification',
                'verbose_name_plural': 'Academic Qualifications',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Governorate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('secondName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Second Name')),
                ('thirdName', models.CharField(blank=True, max_length=200, null=True, verbose_name='Third Name')),
                ('nickname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nickname')),
                ('birthPlace', models.TextField(blank=True, null=True, verbose_name='Birth Place')),
                ('birthDate', models.DateField(default=datetime.datetime.now, validators=[base.models.validate_date], verbose_name='Birth Date')),
                ('nationalId', models.CharField(max_length=200, validators=[django.core.validators.RegexValidator(code='invalid_data', message='Enter a valid national id', regex='^([2-3]{1})([0-9]{2})(0[1-9]|1[012])(0[1-9]|[1-2][0-9]|3[0-1])(0[1-4]|[1-2][1-9]|3[1-5]|88)[0-9]{3}([0-9]{1})[0-9]{1}$')], verbose_name='National ID')),
                ('insuranceNumber', models.CharField(blank=True, max_length=200, null=True, verbose_name='Insurance Number')),
                ('healthInsuranceNumber', models.CharField(blank=True, max_length=200, null=True, verbose_name='Health Insurance Number')),
                ('academicQualifications', models.TextField(blank=True, null=True, verbose_name='Academic Qualifications')),
                ('jobFamily', models.CharField(blank=True, max_length=200, null=True, verbose_name='Job Family')),
                ('graduationYear', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Graduation Year')),
                ('employmentDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Employment Date')),
                ('decisionNumber', models.CharField(blank=True, max_length=200, null=True, verbose_name='Decision Number')),
                ('militaryStatus', models.CharField(blank=True, choices=[('Completed', 'تم الخدمة'), ('Permanently Exempted', 'معافى نهائيًا'), ('Temporarily Exempted', 'معافى مؤقتًا'), ('Draft Evader', 'متخلف عن التجنيد'), ('Deferred Conscription', 'مؤجل التجنيد'), ('Not Required for Conscription', 'غير مطلوب للتجنيد')], max_length=200, null=True, verbose_name='Military Status')),
                ('jobStartDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Job Start Date')),
                ('currentRank', models.CharField(blank=True, choices=[('Rank 1', 'درجة 1'), ('Rank 2', 'درجة 2'), ('Rank 3', 'درجة 3')], max_length=200, null=True, verbose_name='Current Rank')),
                ('previousEmployer', models.CharField(blank=True, max_length=200, null=True, verbose_name='Previous Employer')),
                ('currentEmployer', models.CharField(blank=True, max_length=200, null=True, verbose_name='Current Employer')),
                ('idealEmployee', models.BooleanField(blank=True, default=False, null=True, verbose_name='Ideal Employee')),
                ('policeDayHonoring', models.BooleanField(blank=True, default=False, null=True, verbose_name='Police Day Honoring')),
                ('periodicVacations', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Periodic Vacations')),
                ('casualVacations', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Casual Vacations')),
                ('retirementDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Retirement Date')),
                ('solidarityFund', models.BooleanField(blank=True, default=False, null=True, verbose_name='Solidarity Fund')),
                ('solidarityFundDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Joining Date')),
                ('stakeholderFund', models.BooleanField(blank=True, default=False, null=True, verbose_name='stakeholder Fund')),
                ('stakeholderFundDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Joining Date')),
                ('insuranceUmbrella', models.BooleanField(blank=True, default=False, null=True, verbose_name='Insurance Umbrella')),
                ('insuranceUmbrellaDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Joining Date')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('religion', models.CharField(blank=True, choices=[('Muslim', 'مسلم'), ('Christian', 'مسيحى')], max_length=200, null=True, verbose_name='Religion')),
                ('previousHaj', models.BooleanField(blank=True, default=False, null=True, verbose_name='Previous Haj')),
                ('previousHajDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Previous Haj Date')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Course Name')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Course Address')),
                ('startDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Start Date')),
                ('endDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='End Date')),
                ('certificateObtained', models.BooleanField(blank=True, default=False, null=True, verbose_name='Obtained Certificate')),
                ('grade', models.CharField(blank=True, choices=[('Failed', 'رسوب'), ('Fair', 'مقبول'), ('Good', 'جيد'), ('Very Good', 'جبد جدا'), ('Excellent', 'امتياز')], max_length=200, null=True, verbose_name='Grade')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='EmployeeAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'ح'), ('S', 'م'), ('C', 'ع'), ('A', 'د'), ('M', 'غ'), ('O', 'ر')], max_length=200, verbose_name='Status')),
                ('dayDate', models.DateField(default=datetime.datetime.now, validators=[base.models.validate_date], verbose_name='Day Date')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Employee Attendance',
                'verbose_name_plural': 'Employees Attendance',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('governorate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='divisions', to='base.governorate')),
            ],
        ),
        migrations.CreateModel(
            name='IdealEmployeeCandidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idealEmployee', models.BooleanField(blank=True, default=False, null=True, verbose_name='Ideal Employee')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Ideal Employee Candidate',
                'verbose_name_plural': 'Ideal Employee Candidates',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='Penalty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('disciplinary', 'إنضباطية'), ('behavioral', 'مسلكية')], max_length=200, verbose_name='Type')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('penaltyDate', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Penalty Date')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Penalty',
                'verbose_name_plural': 'Penalties',
                'ordering': ['-updated', '-created'],
            },
        ),
        migrations.CreateModel(
            name='SecretReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(verbose_name='Description')),
                ('reportDateFrom', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Report Date From')),
                ('reportDateTo', models.DateField(blank=True, null=True, validators=[base.models.validate_date], verbose_name='Report Date To')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Secret Report',
                'verbose_name_plural': 'Secret Reports',
                'ordering': ['-updated', '-created'],
            },
        ),
    ]
